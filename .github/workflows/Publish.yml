name: Publish WASM Components

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Release tag name and version (e.g., v1.0.0)"
        required: false
        type: string
      dry_run:
        description: "Dry run (do not actually publish)"
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
jobs:
  build-and-publish-wasm:
    name: Build and Publish WASM Components
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip2

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Install tools
        run: |
          just install-tools
      
      - name: Run linting checks
        run: |
          just lint
      
      - name: Build components
        run: |
          just build
      
      - name: Validate WASM components
        run: |
          just validate-wasm
      
      - name: Extract WIT interfaces
        run: |
          just extract-wit
      - name: Get component list
        id: get-components
        run: |
          components=$(ls pkg/ | tr '\n' ' ')
          echo "components=$components" >> $GITHUB_OUTPUT
          echo "Found components: $components"

      - name: Package components
        if: success()  # Only run if all previous steps succeeded
        env:
          WKG_OCI_USERNAME: ${{ github.actor }}
          WKG_OCI_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Determine tag based on trigger type
          if [ "${{ github.event_name }}" == "push" ]; then
            TAG="latest"
            echo "üöÄ Publishing components with 'latest' tag (push to main)"
          elif [ -n "${{ github.event.inputs.tag_name }}" ]; then
            TAG="${{ github.event.inputs.tag_name }}"
            echo "üè∑Ô∏è  Publishing components with version tag: $TAG"
          else
            TAG="latest"
            echo "üöÄ Publishing components with 'latest' tag (manual dispatch without version)"
          fi

          for component in ${{ steps.get-components.outputs.components }}; do
            echo "Publishing component: $component"
            if [ -f "target/wasm32-wasip2/release/$component.wasm" ]; then
              wkg oci push ghcr.io/${{github.repository}}/$component:$TAG target/wasm32-wasip2/release/$component.wasm
              echo "‚úÖ Successfully published $component:$TAG"
            else
              echo "‚ö†Ô∏è  Warning: WASM file not found for component $component"
            fi
          done
